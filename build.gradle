
buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.github.spotbugs.snom:spotbugs-gradle-plugin:5.0.3"
    classpath 'org.owasp:dependency-check-gradle:6.5.0.1'
  }
}


allprojects {
  defaultTasks 'clean', 'build', 'publish', 'installDist'
  group = 'coyote'
  version = '0.1.0'
}

subprojects {
  
  apply plugin: 'java'
  apply plugin: 'jacoco'
//  apply plugin: "com.github.spotbugs"
  apply plugin: 'org.owasp.dependencycheck'
  apply plugin: 'maven-publish'
  apply plugin: 'application'
  apply plugin: 'eclipse'
  apply plugin: 'idea'

  repositories {
    mavenCentral()
    mavenLocal()
  }
  
  dependencies {
    testImplementation ("org.junit.jupiter:junit-jupiter-api:5.3.2")
    testRuntimeOnly ("org.junit.jupiter:junit-jupiter-engine:5.3.2")
//    spotbugsPlugins ("com.h3xstream.findsecbugs:findsecbugs-plugin:1.8.0")
  }

  tasks.withType(Test) {
    useJUnitPlatform()
  }

  apply from: "$rootDir/integration-test.gradle"

  check.dependsOn jacocoTestCoverageVerification
  check.dependsOn dependencyCheckAnalyze

//  spotbugs {
//    effort = "max"
//    reportLevel = "low"
//    ignoreFailures = true
//    showProgress = true
//
//    ignoreFailures = false
//    showStackTraces = true
//    showProgress = true
//    effort = 'default'
//    reportLevel = 'default'
//    visitors = [ 'FindSqlInjection', 'SwitchFallthrough' ]
//    omitVisitors = [ 'FindNonShortCircuit' ]
//    reportsDir = file("$buildDir/spotbugs")
//    includeFilter = file("include.xml")
//    excludeFilter = file("exclude.xml")
//    baselineFile = file("baseline.xml")
//    onlyAnalyze = [ 'com.foobar.MyClass', 'com.foobar.mypkg.*' ]
//    maxHeapSize = '1g'
//    extraArgs = [ '-nested:false' ]
//    jvmArgs = [ '-Duser.language=ja' ]
//  }
  
  jacocoTestReport {
    reports {
      xml.enabled true
      html.enabled true
    }
  }

  check.dependsOn jacocoTestReport
  
//  tasks.withType(com.github.spotbugs.SpotBugsTask) {
//    reports {
//      xml.enabled false
//      html.enabled true
//    }
//  }
  
}
